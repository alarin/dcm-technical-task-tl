{"version":3,"sources":["hoc/Auxiliary/AuxComponent.js","components/TestItems/TestItem/TestItem.js","components/TestItems/TestItems.js","components/TestExecutionTable/TestExecutionTable.js","axios-api.js","components/TestItemDetails/TestItemDetails.js","components/AddNewRequest/AddNewRequest.js","components/AddNewTest/AddNewTest.js","containers/IONOSTestExecutor/IONOSTestExecutor.js","App.js","serviceWorker.js","index.js"],"names":["auxComponent","props","children","TestItem","className","this","status","ID","requestedBy","createdAt","env_name","path","href","onClick","click","Component","items","map","item","key","id","created_at","requested_by","displayPath","clicked","bind","TestExecutionTable","tests","TestItems","viewItemDetails","instance","axios","create","baseURL","TestItemDetails","currentItem","backClicked","logs","AddNewRequest","type","name","placeholder","value","requester","onChange","requesterChanged","requesterError","env","envChanged","defaultValue","assets","test_envs","envError","multiple","testPath","testPathChanged","available_paths","testPathError","disabled","submitTest","uploadDir","uploadDirChanged","upload_dirs","uploadDirError","accept","testFile","testFileChanged","testFileError","uploadTest","IONOSTestExecutor","state","error","detailsView","itemID","interval","getDisplayPath","val","some","i","refreshList","get","then","response","data","setState","catch","post","formData","FormData","append","headers","refreshAssets","upload_dir","test_file","itemId","backToListItems","handleTestPathChanged","e","options","target","l","length","selected","push","setInterval","clearInterval","toString","AddNewTest","files","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a92d8d08.chunk.js","sourcesContent":["const auxComponent = (props) => props.children;\nexport default auxComponent;","import React, {Component}  from 'react';\n\nclass TestItem extends Component {\n\n  render(){\n     let className = \"failed\";\n     if (this.props.status === \"SUCCESS\") {\n         className = 'succeed'\n     } else if (this.props.status === \"RUNNING\" || this.props.status === \"CREATED\") {\n         className = 'running'\n     }\n    return (\n        <tr className={className}>\n            <td>{this.props.ID}</td>\n            <td>{this.props.requestedBy}</td>\n            <td>{this.props.createdAt}</td>\n            <td>{this.props.env_name}</td>\n            <td>{this.props.path}</td>\n            <td>{this.props.status}</td>\n            <td><a href=\"#\" onClick={this.props.click}>View Details</a></td>\n        </tr>\n    );\n  }\n}\n\nexport default TestItem;","import React from 'react';\nimport TestItem from './TestItem/TestItem';\n\nconst items = (props) => (\n  props.items.map((item) => {\n    return (\n        <TestItem\n            key={item.id}\n            ID={item.id}\n            createdAt={item.created_at}\n            env_name={item.env_name}\n            requestedBy={item.requested_by}\n            status={item.status}\n            path={item.displayPath}\n            click={props.clicked.bind(this, item.id)}\n        />\n    );\n  })\n);\n\nexport default items;","import React, {Component}  from 'react';\nimport TestItems from \"../TestItems/TestItems\";\n\nclass TestExecutionTable extends Component {\n\n  render(){\n     const tests = <TestItems items={this.props.items} clicked={this.props.viewItemDetails}/>\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n              <fieldset>\n                <legend>Test execution requests</legend>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                      <th>Request ID</th>\n                      <th>Requested By</th>\n                      <th>Created At</th>\n                      <th>Test Env</th>\n                      <th>Test Path</th>\n                      <th>Status</th>\n                      <th>Details</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {tests}\n                    </tbody>\n                  </table>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default TestExecutionTable;","import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8081/api/v1/',\n});\n\nexport default instance;\n","import React, {Component}  from 'react';\nimport Aux from \"../../hoc/Auxiliary/AuxComponent\";\n\nclass TestItemDetails extends Component {\n\n\n  render(){\n      let className = \"failed\";\n     if (this.props.currentItem.status === \"SUCCESS\") {\n         className = 'succeed'\n     } else if (this.props.currentItem.status === \"RUNNING\" || this.props.currentItem.status === \"CREATED\") {\n         className = 'running'\n     }\n    return (\n        <Aux>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <a className=\"btn btn-primary float-right\" href=\"#\" onClick={this.props.backClicked.bind(this)}>Back</a>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <fieldset>\n                  <legend>Test details</legend>\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                      <tbody>\n                      <tr>\n                        <td className=\"title\">ID</td>\n                        <td>{this.props.currentItem.id}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Requested by</td>\n                        <td>{this.props.currentItem.requested_by}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Env</td>\n                        <td>{this.props.currentItem.env_name}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Path</td>\n                        <td>{this.props.currentItem.displayPath}</td>\n                      </tr>\n                      <tr className={className}>\n                        <td className=\"title\">Status</td>\n                        <td>{this.props.currentItem.status}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Logs</td>\n                        <td>\n                    <pre><code className=\"python\">\n                      {this.props.currentItem.logs}\n                      </code></pre>\n                        </td>\n                      </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n        </Aux>\n    );\n  }\n}\n\nexport default TestItemDetails;\n","import React, {Component}  from 'react';\n\nclass AddNewRequest extends Component {\n\n  render(){\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n              <fieldset>\n                <legend>New request</legend>\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-md-3 form-group\">\n                      <input type=\"text\" className=\"form-control\" name=\"requester\" id=\"requester\"\n                             placeholder=\"Requester\" value={this.props.requester} onChange={this.props.requesterChanged.bind(this)}/>\n                             <p className=\"error-message\">{this.props.requesterError}</p>\n                    </div>\n                    <div className=\"col-md-3 form-group\">\n                      <select className=\"form-control\" name=\"env_id\" id=\"env_id\" placeholder=\"Environment ID\"\n                              value={this.props.env}  onChange={this.props.envChanged.bind(this)}>\n                        <option value=\"\" defaultValue></option>\n                        {this.props.assets.test_envs.map(item => <option value={item.id} key={item.id}>{item.name}</option>)}\n                      </select>\n                             <p className=\"error-message\">{this.props.envError}</p>\n                    </div>\n                    <div className=\"col-md-4 form-group\">\n                      <select className=\"form-control\" name=\"test_path\" id=\"test_path\" multiple\n                             placeholder=\"Test Path\" value={this.props.testPath}  onChange={this.props.testPathChanged.bind(this)}>\n                        <option value=\"\" defaultValue></option>\n                        {this.props.assets.available_paths.map(item => <option value={item.id}  key={item.id}>{item.path}</option>)}\n                      </select>\n                             <p className=\"error-message\">{this.props.testPathError}</p>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <input type=\"button\" className=\"btn btn-primary\" value=\"Submit\" disabled={this.props.testPath === '' || this.props.requester === '' ||this.props.env === ''} onClick={this.props.submitTest}/>\n                    </div>\n                  </div>\n                </form>\n              </fieldset>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default AddNewRequest;","import React, {Component}  from 'react';\n\nclass AddNewRequest extends Component {\n\n  render(){\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n              <fieldset>\n                <legend>Upload test</legend>\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-md-3 form-group\">\n                      <select className=\"form-control\" name=\"upload_dir\" id=\"upload_dir\" placeholder=\"Upload Dir\"\n                              value={this.props.uploadDir}  onChange={this.props.uploadDirChanged.bind(this)}>\n                        <option value=\"\" defaultValue></option>\n                        {this.props.assets.upload_dirs.map(item => <option value={item} key={item}>{item}</option>)}\n                      </select>\n                      <p className=\"error-message\">{this.props.uploadDirError}</p>\n                    </div>\n                    <div className=\"col-md-3 form-group\">\n                       <input accept=\".py\" type=\"file\" name=\"test_file\" id=\"test_file\" key={this.props.testFile} onChange={this.props.testFileChanged.bind(this)}/>\n                       <p className=\"error-message\">{this.props.testFileError}</p>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <input type=\"button\" id=\"submit_test_upload\" className=\"btn btn-primary\" value=\"Submit\" disabled={this.props.uploadDir === '' || this.props.testFile === ''} onClick={this.props.uploadTest}/>\n                    </div>\n                  </div>\n                </form>\n              </fieldset>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default AddNewRequest;","import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Auxiliary/AuxComponent';\nimport TestExecutionTable from './../../components/TestExecutionTable/TestExecutionTable';\n\nimport axios from './../../axios-api'\nimport TestItemDetails from \"../../components/TestItemDetails/TestItemDetails\";\nimport AddNewRequest from \"../../components/AddNewRequest/AddNewRequest\";\nimport AddNewTest from \"../../components/AddNewTest/AddNewTest\";\n\n\nclass IONOSTestExecutor extends Component {\n  state = {\n    assets: {test_envs: [], available_paths: [], upload_dirs: []},\n    error: false,\n    items: [],\n    detailsView: false,\n    itemID: null,\n    currentItem: {},\n    requesterError: '',\n    envError: '',\n    testPathError: '',\n    requester: '',\n    env: '',\n    testPath: [],\n    uploadDir: '',\n    uploadDirError: '',\n    testFile: '',\n    testFileError: ''\n  };\n\n  interval = null\n\n  refreshAssets() {\n    axios.get('assets').then(response => {\n      this.setState({assets: response.data})\n    }).catch(error => {\n      this.setState({error: true})\n    })\n  }\n\n  componentDidMount () {\n    this.refreshAssets()\n\n    this.interval = setInterval(this.refreshList, 1000);\n    this.refreshList()\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getDisplayPath = (path) => {\n    let val = '';\n    this.state.assets.available_paths.map(item => {\n      if (path.some(i => i === item.id)) {\n        val += item.path + ' '\n      }\n    })\n    return val;\n  }\n\n  refreshList = () => {\n    axios.get('test-run').then(response => {\n      let data = response.data;\n      this.setState({items: data.map(item => { return {displayPath: this.getDisplayPath(item.path), ...item}})})\n    }).catch(error => {\n      this.setState({error: true})\n    })\n    if (this.state.itemID !== null){\n      this.viewItemDetails(this.state.itemID)\n    }\n  }\n\n  submitTest = () => {    \n    axios.post('test-run', {requested_by: this.state.requester, env: this.state.env, path: this.state.testPath}).then(response => {\n      this.setState({requester: '', env: '', testPath: ''})\n        this.refreshList()\n      }).catch(error => {\n        this.setState({\n          requesterError: error.data.requested_by,\n          envError: error.data.env,\n          testPathError: error.data.path,\n        })\n      })\n  }\n\n  uploadTest = () => {\n    const formData = new FormData();\n    formData.append('upload_dir', this.state.uploadDir)\n    formData.append('test_file', this.state.testFile)\n    axios.post('test-file', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n    ).then(response => {      \n        this.setState({uploadDir: '', testFile: null})   \n        this.refreshAssets()\n      }).catch(error => {\n        this.setState({\n          uploadDirError: error.response.data.upload_dir,\n          testFileError: error.response.data.test_file,\n        })\n      })\n  }\n\n  viewItemDetails = (itemId) => {\n      axios.get('test-run/' + itemId).then(response => {\n        let data = response.data\n        data.displayPath = this.getDisplayPath(response.data.path)\n        this.setState({currentItem: data})\n      }).catch(error => {\n        this.setState({error: true})\n      })\n    this.setState({\n      detailsView: true,\n      itemID: itemId\n    })\n  };\n\n  backToListItems = () => {\n    this.setState({\n      detailsView: false,\n      itemID: null\n    })\n  };\n\n  handleTestPathChanged = (e) => {\n    let options = e.target.options;\n    let value = [];\n    for (let i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({testPath: value});\n  }\n\n  render () {\n    if (this.state.detailsView) {\n      return (\n          <TestItemDetails currentItem={this.state.currentItem} backClicked={this.backToListItems}></TestItemDetails>\n      )\n    }\n    return (\n        <Aux>\n          <AddNewRequest\n              requester={this.state.requester}\n              requesterError={this.state.requesterError}\n              env={this.state.env}\n              envError={this.state.envError}\n              testPath={this.state.testPath}\n              testPathError={this.state.testPathError}\n              assets={this.state.assets}\n\n              requesterChanged={e => this.setState({ requester: e.target.value?.toString() })}\n              envChanged={e => this.setState({ env: e.target.value?.toString() })}\n              testPathChanged={this.handleTestPathChanged}\n              submitTest={this.submitTest}\n          ></AddNewRequest>\n          <AddNewTest\n              assets={this.state.assets}\n              testFile={this.state.testFile}\n              testFileChanged={e => this.setState({ testFile: e.target.files[0] })}\n              testFileError={this.testFileError}\n              uploadDir={this.state.uploadDir}\n              uploadDirChanged={e => this.setState({ uploadDir: e.target.value?.toString() })}              \n              uploadDirError={this.state.uploadDirError}\n              uploadTest={this.uploadTest}\n          ></AddNewTest>\n          <TestExecutionTable items={this.state.items} viewItemDetails={this.viewItemDetails}></TestExecutionTable>\n      </Aux>\n    )\n  }\n}\n\nexport default IONOSTestExecutor;\n","import React from 'react';\nimport IONOSTestExecutor from \"./containers/IONOSTestExecutor/IONOSTestExecutor\";\n\nfunction App() {\n  return (\n\n      <div>\n          <IONOSTestExecutor></IONOSTestExecutor>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}